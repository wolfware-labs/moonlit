name: Docs CI

on:
  workflow_dispatch:
  push:
    branches: [ "main", "dev" ]
    tags: [ 'v*.*.*' ]
    paths:
      - 'docs/**'


jobs:
  build:

    runs-on: ubuntu-latest
    environment: Development
    permissions:
      contents: read
      packages: write
      id-token: write

    
    defaults:
      run:
        working-directory: docs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Install Moonlit
        run: dotnet tool install -g --prerelease moonlit-cli

      - name: Add global tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Install Docker Buildx with cloud driver support
        run: |
          # Download the latest buildx version with cloud support from buildx-desktop repo
          BUILDX_VERSION=$(curl -s https://api.github.com/repos/docker/buildx-desktop/releases/latest | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "Installing buildx version: $BUILDX_VERSION"
          
          # Create the CLI plugins directory
          mkdir -p ~/.docker/cli-plugins
          
          # Download and install buildx with cloud driver support
          curl -L "https://github.com/docker/buildx-desktop/releases/download/${BUILDX_VERSION}/buildx-${BUILDX_VERSION}.linux-amd64" \
            -o ~/.docker/cli-plugins/docker-buildx
          
          # Make it executable
          chmod +x ~/.docker/cli-plugins/docker-buildx
          
          # Verify installation
          docker buildx version

      - name: Release
        run: moonlit release
        env:
          MOONLIT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MOONLIT_DOCKER_USER: ${{ vars.DOCKER_USER }}
          MOONLIT_DOCKER_PAT: ${{ secrets.DOCKER_PAT }}
          MOONLIT_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}