using Microsoft.Extensions.Configuration;

namespace Wolfware.Moonlit.Core.Configuration.Abstractions;

/// <summary>
/// Represents a factory for creating configurations using the provided data or predefined base settings.
/// </summary>
/// <remarks>
/// The IConfigurationFactory interface defines methods for generating configuration instances:
/// 1. A default base configuration can be created without any data.
/// 2. A customizable configuration can be generated by combining a dictionary of key-value pairs and
/// optionally merging with an existing parent configuration.
/// </remarks>
public interface IConfigurationFactory
{
  /// <summary>
  /// Creates a default base configuration.
  /// </summary>
  /// <returns>A new instance of <see cref="IConfiguration"/> representing a base configuration with no custom data.</returns>
  public IConfiguration CreateBaseConfiguration();

  /// <summary>
  /// Creates a new instance of <see cref="IConfiguration"/> using the provided configuration data
  /// and optionally merges it with a parent configuration.
  /// </summary>
  /// <param name="configurationData">A dictionary of key-value pairs representing configuration settings.</param>
  /// <param name="parentConfiguration">An optional parent configuration to merge with the provided configuration data.</param>
  /// <returns>A new instance of <see cref="IConfiguration"/> representing the combined configuration.</returns>
  public IConfiguration Create(Dictionary<string, object?> configurationData,
    IConfiguration? parentConfiguration = null);
}
