name: "Test Release"

plugins:
  - name: "git"
    url: "file://D:/wolfware/moonlit/Wolfware.Moonlit/Wolfware.Moonlit.Plugins.Git/bin/Debug/net9.0/Wolfware.Moonlit.Plugins.Git.dll"
  - name: "gh"
    url: "file://D:/wolfware/moonlit/Wolfware.Moonlit/Wolfware.Moonlit.Plugins.GitHub/bin/Debug/net9.0/Wolfware.Moonlit.Plugins.Github.dll"
    config:
      token: $(GITHUB_TOKEN)
  - name: "sr"
    url: "file://D:/wolfware/moonlit/Wolfware.Moonlit/Wolfware.Moonlit.Plugins.SemanticRelease/bin/Debug/net9.0/Wolfware.Moonlit.Plugins.SemanticRelease.dll"
  - name: "nuget"
    url: "file://D:/wolfware/moonlit/Wolfware.Moonlit/Wolfware.Moonlit.Plugins.Nuget/bin/Debug/net9.0/Wolfware.Moonlit.Plugins.Nuget.dll"
    config:
      source: "https://api.nuget.org/v3/index.json"
      apiKey: $(NUGET_API_KEY)

stages:
  analyze:
    - name: repo
      run: git.repo-context
    - name: tag
      run: gh.latest-tag
      config:
        prefix: "v"
    - name: items
      run: gh.items-since-commit
      config:
        sha: $(output:tag:commitSha)
    - name: version
      run: sr.calculate-version
      config:
        branch: $(output:repo:branch)
        baseVersion: $(output:tag:name)
        commits: $(output:items:commits)
        prereleaseMappings:
          main: next

  build:
    - name: pack
      run: nuget.pack
      config:
        project: "../../../Wolfware.Moonlit.Cli.csproj"
        version: $(output:version:nextFullVersion)
    - name: publish
      run: nuget.push
      config:
        package: $(output:pack:packagePath)

  release:
    - name: changelog
      run: sr.generate-changelog
      config:
        commits: $(output:items:commits)
        openAiKey: $(OPENAI_API_KEY)
    - name: createRelease
      run: gh.create-release
      config:
        name: "Release $(output:version:nextVersion)"
        tag: $(output:version:nextVersion)
        label: "released on @$(output:repo:branch)"
        changelog: $(output:changelog:categories)
        prerelease: $(output:version:isPrerelease)
        pullRequests: $(output:items:pullRequests)
        issues: $(output:items:issues)